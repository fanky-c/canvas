/* var
 * -------------------------- */
$psdWidth: 640!default; //rem 
$cssjsdate: 201511061220!default;


/* function 
 * ------------------------- */
@function rem($val){
    @return $val / $psdWidth * 10 * 1rem;
}

/* mixin( @include)
 * -------------------------- */
@mixin attr2all($cssAttr, $val...){
    -webkit-#{$cssAttr}: $val;
            #{$cssAttr}: $val;
}

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }
    @keyframes #{$name} {
        @content;
    }
}

//inline-block
@mixin inline-block ($lte7:true){
  display: inline-block;
  @if $lte7 {
    *display: inline;
    *zoom:1;
  }
}

//triangle 
@mixin triangle($direction:bottom, $size:5px, $borderColor:transparent ) {
  content:"";
  height: 0;
  width: 0;

  @if $direction == top {
    border-bottom:$size solid $borderColor;
    border-left:$size dashed transparent;
    border-right:$size dashed transparent;
  } 
  @else if $direction == right {
    border-left:$size solid $borderColor;
    border-top:$size dashed transparent;
    border-bottom:$size dashed transparent;
  } 
  @else if $direction == bottom {
    border-top:$size solid $borderColor;
    border-left:$size dashed transparent;
    border-right:$size dashed transparent;
  } 
  @else if $direction == left {
    border-right:$size solid $borderColor;
    border-top:$size dashed transparent;
    border-bottom:$size dashed transparent;
  }
}


@mixin imgBkgd($url:none, $color: transparent, $pos: center, $rept: no-repeat, $size: cover){
    background: $color url('../images/' + $url + '?' + $cssjsdate) $pos $rept;
    background-size: $size;
}

@mixin imgBkgd-b64($url, $color: transparent, $pos: center, $rept: no-repeat, $size: cover){
    background: $color inline-image('../images/base64/' + $url) $pos $rept;
    background-size: $size;
    -webkit-background-size: $size;
}


@mixin autoSize($key, $value, $viewWidth: 320){
    #{$key}: #{$value}px;
    #{$key}: #{$value / $viewWidth * 100vw};
}

$mqViewports: 320px 360px 375px 414px 480px;
@mixin mediaQuery($viewport) {
    @media only screen and (min-width: $viewport) {
        @content;
    }
    @media only screen and (min-width: $viewport) and (min-device-width: $viewport){
        @content;
    }
}

@mixin borderWithDecimal($cssPx, $scale, $color, $side){
    position: relative;
    .border-#{$side}{
        position: absolute;
        #{$side}: 0;
        @if $side == 'left' or $side == 'right'{
            top: 0;
            bottom: 0;
            height: 100%;
            width: $cssPx;
            -webkit-transform: scaleX($scale);
        }
        @if $side == 'top' or $side == 'bottom'{
            left: 0;
            right: 0;
            height: $cssPx;
            width: 100%;
            -webkit-transform: scaleY($scale);
        }
        background-color: $color;
    }
}


/* page
 * ----------------------------------------*/
%avoid_spacing{
    font-size: 0;
    letter-spacing: -4px;
}

%resume_avoid_spacing{
    display: inline-block;
    letter-spacing: normal;
    vertical-align: top;
}

%fixed_width_content{
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
}

%fixed_width_multiLine_content{
    display: -webkit-box;
    -webkit-box-orient: vertical;
    text-overflow: ellipsis;
    overflow : hidden;
}



/* page
 * ----------------------------------------*/



